// TextBlock.tsx

"use client";
import { motion, Variants } from "framer-motion";
import React from "react";

// üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ (–º–æ–≥—É—Ç –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)
const defaultVariants: Variants = {
  fadeInUp: {
    opacity: 0,
    y: 20,
  },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.6,
      ease: "easeOut",
      delay: 0.1, // –î–æ–±–∞–≤–∏–º –Ω–µ–±–æ–ª—å—à–æ–π delay –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    },
  },
};

// üí° –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–ø—Å–æ–≤
interface TextBlockProps {
  children: React.ReactNode;
  isAnimated?: boolean; // –í–∫–ª—é—á–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é framer-motion
  // –î–æ–±–∞–≤–∏–º 'small' (FeatureDescription), 'medium' (Description) –∏ 'large' (HeroDescription)
  size?: "small" | "medium" | "large"; 
  className?: string; // –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ª—é–±—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ Tailwind
  // –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç Variants
  animationVariants?: Variants; 
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è.
 * –ú–æ–∂–µ—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é framer-motion –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä.
 */
const TextBlock: React.FC<TextBlockProps> = ({
  children,
  isAnimated = false,
  size = "medium", // –ò–∑–º–µ–Ω–∏–º –¥–µ—Ñ–æ–ª—Ç –Ω–∞ "medium" –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  className = "",
  // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
  animationVariants = defaultVariants,
}) => {
  
  // –ë–∞–∑–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã, –æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
  const baseClasses = "text-gray-600 leading-relaxed";

  // –ö–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞
  let sizeClasses = "";
  switch (size) {
    case "large": // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç HeroDescription
      sizeClasses = "text-xl mb-8 max-w-xl";
      break;
    case "medium": // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Description (–±—ã–≤—à–∏–π standard)
      sizeClasses = "mb-6";
      break;
    case "small": // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç FeatureDescription
      sizeClasses = "text-lg";
      break;
  }
  
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã
  const fullClassName = `${baseClasses} ${sizeClasses} ${className}`.trim();

  if (isAnimated) {
    // üí° –õ—É—á—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ framer-motion: –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–µ—Å—å –æ–±—ä–µ–∫—Ç variants, 
    // –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –µ–≥–æ —á–∞—Å—Ç—å, —á—Ç–æ–±—ã motion-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–≥ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏.
    return (
      <motion.p
        variants={animationVariants} // –ü–µ—Ä–µ–¥–∞–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç
        initial="fadeInUp"
        animate="visible"
        className={fullClassName}
      >
        {children}
      </motion.p>
    );
  }

  // –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞, —Ä–µ–Ω–¥–µ—Ä–∏–º –æ–±—ã—á–Ω—ã–π —Ç–µ–≥ <p>
  return (
    <p className={fullClassName}>
      {children}
    </p>
  );
};

export default TextBlock;